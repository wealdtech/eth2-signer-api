syntax = "proto3";

import "eth2.proto";

package v1;

service Signer {
  rpc Sign(SignRequest) returns (SignResponse) { }
  rpc SignBeaconAttestation(SignBeaconAttestationRequest) returns (SignResponse) { }
  rpc SignBeaconProposal(SignBeaconProposalRequest) returns (SignResponse) { }
}

message SignRequest {
  oneof id {
    bytes public_key = 1;
    string account = 2;
  }
  bytes data = 3;
  bytes domain = 4;
}

message SignBeaconAttestationRequest {
  oneof id {
    bytes public_key = 1;
    string account = 2;
  }
  bytes domain = 3;
  AttestationData data = 4;
}

message SignBeaconProposalRequest {
  oneof id {
    bytes public_key = 1;
    string account = 2;
  }
  bytes domain = 3;
  BeaconBlockHeader data = 4;
}

enum SignState {
  // UNKNOWN occurs when no information about the state is available.
  UNKNOWN = 0;
  // SUCCEEDED occurs when a request to sign was successful.
  SUCCEEDED = 1;
  // DENIED occurs when a request to sign was denied.
  DENIED = 2;
  // FAILED occurs when a request to sign failed to complete.
  FAILED = 3;
}

message SignResponse {
  SignState state = 1;
  bytes signature = 2;
}
